"""fix type hints & relations

Revision ID: 56034520f738
Revises: 628b5fe68e5d
Create Date: 2025-10-25 19:55:56.046950
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel



# revision identifiers, used by Alembic.
revision = '56034520f738'
down_revision = '628b5fe68e5d'
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('seccion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre', name='uq_seccion_nombre')
    )
    op.create_index(op.f('ix_seccion_nombre'), 'seccion', ['nombre'], unique=False)
    op.create_table('ubicacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('seccion_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['seccion_id'], ['seccion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ubicacion_nombre'), 'ubicacion', ['nombre'], unique=False)
    op.create_index(op.f('ix_ubicacion_seccion_id'), 'ubicacion', ['seccion_id'], unique=False)
    op.create_table('equipo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identidad', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('numero_serie', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.Column('nfc_tag', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('seccion_id', sa.Integer(), nullable=True),
    sa.Column('ubicacion_id', sa.Integer(), nullable=True),
    sa.Column('atributos', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['seccion_id'], ['seccion.id'], ),
    sa.ForeignKeyConstraint(['ubicacion_id'], ['ubicacion.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identidad', name='uq_equipo_identidad'),
    sa.UniqueConstraint('nfc_tag', name='uq_equipo_nfc_tag')
    )
    op.create_index(op.f('ix_equipo_identidad'), 'equipo', ['identidad'], unique=False)
    op.create_index(op.f('ix_equipo_nfc_tag'), 'equipo', ['nfc_tag'], unique=False)
    op.create_index(op.f('ix_equipo_numero_serie'), 'equipo', ['numero_serie'], unique=False)
    op.create_index(op.f('ix_equipo_seccion_id'), 'equipo', ['seccion_id'], unique=False)
    op.create_index(op.f('ix_equipo_ubicacion_id'), 'equipo', ['ubicacion_id'], unique=False)
    op.create_table('incidencia',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipo_id', sa.Integer(), nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=False),
    sa.Column('titulo', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('estado', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['equipo_id'], ['equipo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_incidencia_equipo_id'), 'incidencia', ['equipo_id'], unique=False)
    op.create_table('movimiento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipo_id', sa.Integer(), nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=False),
    sa.Column('desde_ubicacion_id', sa.Integer(), nullable=True),
    sa.Column('hacia_ubicacion_id', sa.Integer(), nullable=True),
    sa.Column('comentario', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.ForeignKeyConstraint(['desde_ubicacion_id'], ['ubicacion.id'], ),
    sa.ForeignKeyConstraint(['equipo_id'], ['equipo.id'], ),
    sa.ForeignKeyConstraint(['hacia_ubicacion_id'], ['ubicacion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_movimiento_desde_ubicacion_id'), 'movimiento', ['desde_ubicacion_id'], unique=False)
    op.create_index(op.f('ix_movimiento_equipo_id'), 'movimiento', ['equipo_id'], unique=False)
    op.create_index(op.f('ix_movimiento_hacia_ubicacion_id'), 'movimiento', ['hacia_ubicacion_id'], unique=False)
    op.create_table('reparacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipo_id', sa.Integer(), nullable=False),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=False),
    sa.Column('fecha_fin', sa.DateTime(), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('coste', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['equipo_id'], ['equipo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reparacion_equipo_id'), 'reparacion', ['equipo_id'], unique=False)
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reparacion_equipo_id'), table_name='reparacion')
    op.drop_table('reparacion')
    op.drop_index(op.f('ix_movimiento_hacia_ubicacion_id'), table_name='movimiento')
    op.drop_index(op.f('ix_movimiento_equipo_id'), table_name='movimiento')
    op.drop_index(op.f('ix_movimiento_desde_ubicacion_id'), table_name='movimiento')
    op.drop_table('movimiento')
    op.drop_index(op.f('ix_incidencia_equipo_id'), table_name='incidencia')
    op.drop_table('incidencia')
    op.drop_index(op.f('ix_equipo_ubicacion_id'), table_name='equipo')
    op.drop_index(op.f('ix_equipo_seccion_id'), table_name='equipo')
    op.drop_index(op.f('ix_equipo_numero_serie'), table_name='equipo')
    op.drop_index(op.f('ix_equipo_nfc_tag'), table_name='equipo')
    op.drop_index(op.f('ix_equipo_identidad'), table_name='equipo')
    op.drop_table('equipo')
    op.drop_index(op.f('ix_ubicacion_seccion_id'), table_name='ubicacion')
    op.drop_index(op.f('ix_ubicacion_nombre'), table_name='ubicacion')
    op.drop_table('ubicacion')
    op.drop_index(op.f('ix_seccion_nombre'), table_name='seccion')
    op.drop_table('seccion')
    # ### end Alembic commands ###